/**
 * @file Firestore Security Rules
 * @description This ruleset enforces a strict user-ownership model for the MangaTrack application.
 *
 * Data Structure:
 * - /users/{userId}: Stores public user profile information, with the document ID matching the Firebase Auth UID.
 * - /users/{userId}/library/{mangaId}: Stores manga entries for a user's library.
 *
 * Key Security Decisions:
 * - Users can only access their own profile and library data.
 * - Listing other user's libraries is disallowed.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Protects user profile information. Users can only read and write their own profile data.
     * @path /users/{userId}
     * @allow (create) - User 'abc' can create their profile if request.auth.uid == 'abc'.
     * @allow (get) - User 'abc' can read their profile if request.auth.uid == 'abc'.
     * @allow (update) - User 'abc' can update their profile if request.auth.uid == 'abc'.
     * @allow (delete) - User 'abc' can delete their profile if request.auth.uid == 'abc'.
     * @deny (create) - User 'def' cannot create a profile with ID 'abc'.
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId} {
      function isOwner(userId) {
        return request.auth != null && request.auth.uid == userId;
      }
      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isOwner(userId) && request.resource.data.id == userId;
      allow update: if isOwner(userId) && resource.data.id == userId;
      allow delete: if isOwner(userId) && resource != null;
    }

    /**
     * @description Protects manga entries in a user's library. Users can only manage manga entries in their own library.
     * @path /users/{userId}/library/{mangaId}
     * @allow (create) - User 'abc' can add a manga to /users/abc/library/manga1.
     * @allow (get) - User 'abc' can read a manga from /users/abc/library/manga1.
     * @allow (update) - User 'abc' can update a manga in /users/abc/library/manga1.
     * @allow (delete) - User 'abc' can delete a manga from /users/abc/library/manga1.
     * @deny (create) - User 'def' cannot add a manga to /users/abc/library/manga1.
     * @principle Enforces path-based ownership for library entries.
     */
    match /users/{userId}/library/{mangaId} {
      function isOwner(userId) {
        return request.auth != null && request.auth.uid == userId;
      }
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) && resource != null;
      allow delete: if isOwner(userId) && resource != null;
    }
  }
}